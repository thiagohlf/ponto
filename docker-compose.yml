version: '3.8'

services:
  # Aplicação PHP-FPM
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: production
    container_name: ponto_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./storage/logs:/var/www/html/storage/logs
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=mysql
      - DB_DATABASE=ponto_db
      - DB_USERNAME=ponto_user
      - DB_PASSWORD=ponto_password_secure_2024
      - REDIS_HOST=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ponto_network
    healthcheck:
      test: ["CMD", "php-fpm-healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Web Server
  nginx:
    image: nginx:1.25-alpine
    container_name: ponto_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - nginx_cache:/var/cache/nginx
    depends_on:
      - app
    networks:
      - ponto_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MySQL Database
  mysql:
    image: mysql:8.3
    container_name: ponto_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password_secure_2024
      MYSQL_DATABASE: ponto_db
      MYSQL_USER: ponto_user
      MYSQL_PASSWORD: ponto_password_secure_2024
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - ponto_network
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=1G
      --innodb-log-file-size=256M
      --innodb-flush-log-at-trx-commit=2
      --innodb-flush-method=O_DIRECT
      --query-cache-type=1
      --query-cache-size=128M
      --max-connections=200
      --thread-cache-size=50
      --table-open-cache=4000
      --sort-buffer-size=2M
      --read-buffer-size=2M
      --read-rnd-buffer-size=8M
      --myisam-sort-buffer-size=64M
      --thread-concurrency=8
      --tmp-table-size=64M
      --max-heap-table-size=64M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_password_secure_2024"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache & Sessions
  redis:
    image: redis:7.2-alpine
    container_name: ponto_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - ponto_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: production
    container_name: ponto_queue
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - APP_ENV=production
      - DB_HOST=mysql
      - DB_DATABASE=ponto_db
      - DB_USERNAME=ponto_user
      - DB_PASSWORD=ponto_password_secure_2024
      - REDIS_HOST=redis
      - QUEUE_CONNECTION=redis
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ponto_network

  # Scheduler (Cron)
  scheduler:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: production
    container_name: ponto_scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - APP_ENV=production
      - DB_HOST=mysql
      - DB_DATABASE=ponto_db
      - DB_USERNAME=ponto_user
      - DB_PASSWORD=ponto_password_secure_2024
      - REDIS_HOST=redis
    command: >
      sh -c "echo '* * * * * cd /var/www/html && php artisan schedule:run >> /dev/null 2>&1' | crontab - && crond -f"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ponto_network

# Volumes persistentes
volumes:
  mysql_data:
    driver: local
    name: ponto_mysql_data
  redis_data:
    driver: local
    name: ponto_redis_data
  nginx_cache:
    driver: local
    name: ponto_nginx_cache

# Rede interna
networks:
  ponto_network:
    driver: bridge
    name: ponto_network